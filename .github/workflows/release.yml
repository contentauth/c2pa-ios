name: Release iOS Framework

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version for the release (e.g. v1.0.0)"
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: macos-15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate version format
        run: make validate-version VERSION="${{ github.event.inputs.version }}"

      - name: Display release information
        run: |
          echo "Starting release process for version ${{ github.event.inputs.version }}"
          echo "This workflow will:"
          echo "1. Build iOS XCFramework"
          echo "2. Create and publish Swift Package"
          echo "3. Create GitHub release with artifacts"

      - name: Set up Xcode 16.4
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 16.4

      - name: Verify Xcode version
        run: xcodebuild -version

      - name: Build iOS Framework
        run: make ios-framework

      - name: Package XCFramework for distribution
        run: make package-xcframework

      - name: Compute checksum for XCFramework
        id: compute-checksum
        run: |
          CHECKSUM=$(make compute-checksum | tail -1)
          echo "CHECKSUM=$CHECKSUM" >> $GITHUB_ENV
          echo "Checksum: $CHECKSUM"

      - name: Archive Swift Package
        run: make package-swift

      - name: Update Package.swift with release URL and checksum
        run: |
          make update-package-swift VERSION="${{ github.event.inputs.version }}" CHECKSUM="${{ env.CHECKSUM }}" GITHUB_REPOSITORY="${{ github.repository }}"
          # Show the updated file
          cat ./Package.swift

      - name: Configure Git user
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Commit changes
        run: |
          git add ./Package.swift
          git commit -m "Update Package.swift for release ${{ github.event.inputs.version }}"

      - name: Push changes
        run: git push origin HEAD:main

      - name: Create tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: C2PA iOS ${{ github.event.inputs.version }}
          files: |
            output/C2PAC.xcframework.zip
            output/C2PA-Swift-Package.zip
          body: |
            # C2PA iOS Release ${{ github.event.inputs.version }}

            ## Swift Package Manager Integration

            To use this release as a Swift Package, you have two options:

            ### Option 1: Use the repository as a package dependency

            ```swift
            .package(url: "https://github.com/${{ github.repository }}.git", exact: "${{ github.event.inputs.version }}")
            ```

            ### Option 2: Reference the binary directly

            ```swift
            .binaryTarget(
                name: "C2PAC",
                url: "https://github.com/${{ github.repository }}/releases/download/${{ github.event.inputs.version }}/C2PAC.xcframework.zip",
                checksum: "${{ env.CHECKSUM }}"
            )
            ```

            ## Installation

            See the README.md for detailed integration instructions.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
